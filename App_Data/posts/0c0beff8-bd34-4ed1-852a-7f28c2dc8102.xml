<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>mwrock</author>
  <title>Released Boxstarter v2.4: Test Runner for Chocolatey Packages and many more Windows GUI configuration functions</title>
  <description />
  <content>&lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=boxLogoCheck.png"&gt;&lt;img title="boxLogoCheck" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="boxLogoCheck" src="http://www.mattwrock.com/image.axd?picture=boxLogoCheck_thumb.png" width="100" height="81" /&gt;&lt;/a&gt;This week I released &lt;a href="http://boxstarter.org/"&gt;Boxstarter&lt;/a&gt; version 2.4. This release introduces a new feature for &lt;a href="http://boxstarter.org/TestingPackages"&gt;testing packages&lt;/a&gt;, the addition of many more &lt;a href="http://boxstarter.org/WinConfig"&gt;Windows GUI configuration functions&lt;/a&gt; and several &lt;a href="http://chocolatey.org/packages/boxstarter"&gt;bug fixes&lt;/a&gt; and minor enhancements.&lt;/p&gt;  &lt;h2&gt;Windows GUI Configuration Functions&lt;/h2&gt;  &lt;p&gt;Boxstarter gives great thanks to &lt;a href="http://www.gep13.co.uk/blog/"&gt;Gary Park&lt;/a&gt;&amp;#160;&lt;a href="https://twitter.com/gep13"&gt;(@gep13)&lt;/a&gt; who provided the pull requests delivering these functions. These are a great addition to the value provided by Boxstarter to script your box so that it not only has what you want but also looks just the way you want it. Its not always easy to remember where to right click or how to “swipe” to find the settings that make your environment the most productive place for you to get things done. Here is a list of the new functions:&lt;/p&gt;  &lt;ul&gt;   &lt;li&gt;Enable/Disable showing charms when mouse is in the upper right corner &lt;/li&gt;    &lt;li&gt;Enable/Disable switching apps when pointing in the upper left corner &lt;/li&gt;    &lt;li&gt;Enable/Disable the option to launch powershell from win-x &lt;/li&gt;    &lt;li&gt;Enable/Disable boot to desktop &lt;/li&gt;    &lt;li&gt;Enable/Disable desktop background on the start screen &lt;/li&gt;    &lt;li&gt;Enable/Disable showing the start screen on the active display &lt;/li&gt;    &lt;li&gt;Enable/Disable showing the Apps View by default on the start screen &lt;/li&gt;    &lt;li&gt;Enable/Disable searching everywhere in apps view. Not just apps. &lt;/li&gt;    &lt;li&gt;Enable/Disable showing desktop apps first in results &lt;/li&gt;    &lt;li&gt;Lock/Unlock task bar &lt;/li&gt;    &lt;li&gt;Change taskbar icon size &lt;/li&gt;    &lt;li&gt;Change location of taskbar docking &lt;/li&gt; &lt;/ul&gt;  &lt;p&gt;You can find the exact function names and syntax examples &lt;a href="http://boxstarter.org/WinConfig"&gt;here&lt;/a&gt;.&lt;/p&gt;  &lt;h2&gt;Testing Packages and Continuous Package Delivery&lt;/h2&gt;  &lt;p&gt;A new Boxstarter module has been added, Boxstarter.TestRunner, that can test either specific packages or all packages in a repository that have versions greater than what is published. Boxstarter can be configured to test these packages on one or more “deployment targets” to determine if the package installs are successful. Boxstarter can also be configured to publish a package to its feed if it installed successfully on all deployment targets.&lt;/p&gt;  &lt;p&gt;The Boxstarter.TestRunner module includes some powershell scripts and an MSBuild project file that can be used to integrate with modern build servers enabling scenarios where newly committed packages and package changes are automatically tested and published. They can be tested on multiple targets perhaps with different versions of windows and all of this can be done in the cloud. If testing on Azure VMs, Boxstarter can shutdown the VMs when testing is complete so you only incur costs while tests are being performed. &lt;/p&gt;  &lt;p&gt;Details on how to use the test runner both interactively and with different build server scenarios are documented &lt;a href="http://boxstarter.org/TestingPackages"&gt;here&lt;/a&gt;.&lt;/p&gt;  &lt;h2&gt;Personal Case Study using Visual Studio Online Build Services to detect changes and deploy to Azure VMs and finally publish to the public Chocolatey feed&lt;/h2&gt;  &lt;p&gt;I have a &lt;a href="https://github.com/mwrock/Chocolatey-Packages"&gt;git repository&lt;/a&gt; of almost 50 Chocolatey packages that I keep on Github. I have installed the Boxstarter.TestRunner module which is a separate install from the core set of Boxstarter modules. I have configured Boxstarter to point to my local copy of this repository:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=image_33.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_33.png" width="658" height="250" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;I have also configured the Boxstarter.TestRunner’s deployment options to use both a windows 2012 and a 2008 R2 Azure VM for testing. Before each test, Boxstarter will snap the VMs to a preset checkpoint labeled TestReady that I created with the Boxstarter.Azure module.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=image_34.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_34.png" width="674" height="208" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Furthermore I took an extra step of adding the Boxstarter.TestRunner build scripts to my repo using the Install-BoxstarterBuildScripts command which created a new folder in my repository to hold these scripts and persist my settings:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=image_35.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_35.png" width="676" height="270" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;These files contain scripts that can bootstrap Boxstarter on a build server, test changed packages and publish successful packages. The xml files hold my options. Some of these, Boxstarter adds to my .gitignore file because they have VM credentials and Nuget API keys that I would not want kept in my public github repo.&lt;/p&gt;  &lt;p&gt;Earlier today I received a great Pull Request on three Visual Studio 2013 packages that allow for one to pass additional install arguments and a product key through the Chocolatey installer. I merged those in but before pushing to my github repository I pushed to a special Remote I keep at my &lt;a href="http://www.visualstudio.com/"&gt;VisualStudio.com&lt;/a&gt; account. Anyone can sign up for a VisualStudio.com account for free that supports a team of 5 or fewer members. This gets you private git or tfsvc repositories, work item tracking and a hosted build server. You can also pay for more team members and services. I have a CI build definition setup to build commits to this repository named ChocolateyCI. Almost immediately after my push, a build begins. This calls the Boxstarter.proj MSBuild files which runs BoxstarterBuild.ps1 to orchestrate the testing and publishing using the Boxstarter modules.&lt;a href="http://www.mattwrock.com/image.axd?picture=image_36.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_36.png" width="669" height="419" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;I have hidden it away but I have configured my Build Definition with all of the information it needs to establish a connection with my VMs using the Boxstarter.Azure module and run my packages on my VMs. I can see that my Azure VMs, wrocktest2012 and wrocktest2k8r2, have been fired up to test the committed changes:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=image_37.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; float: none; padding-top: 0px; padding-left: 0px; margin: 0px auto; display: block; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_37.png" width="412" height="315" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Lets quietly sneak in to one of the VMs and just make sure they really are testing:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=image_46.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_46.png" width="649" height="133" /&gt;&lt;/a&gt;Yep. They are diligently testing my packages.&lt;/p&gt;  &lt;p&gt;Now unfortunately I can tell you right now that this build is doomed for failure. This is why: the Visual Studio Online hosted build controllers limit builds to an hour. I have 3 changed Visual Studio packages running sequentially on two small VM instances that have to restore their image before each test. That will certainly take longer than an hour. The hosted build solution is ideal for most packages but not multiple visual studio tests. That’s OK. I have other options. I have another VM that is a dedicated build server. I could push my repo to the remote watched by that server and my build can take as long as it needs. There are different configuration issues to take into consideration when working with a hosted build server like Visual Studio Online or your own private build server. These are documented on the &lt;a href="http://boxstarter.org/TestingPackages"&gt;Boxstarter.org doc pages&lt;/a&gt;.&lt;/p&gt;  &lt;p&gt;For a faster and simpler option, I can test and publish locally on my local Hyper-V instances. That will be a lot faster because these VMs are beefier and the Hyper-V checkpoint restores are much faster than an Azure VM image blob restore. Even simpler, and Boxstarter’s default behavior, is to have one deployment target, localhost, and the package will be tested locally with reboots disabled. However, I already have Visual Studio 2013 installed locally and would rather test in a pristine, controlled environment.&lt;/p&gt;  &lt;p&gt;So I’ll adjust my Test Runner settings:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=image_47.png"&gt;&lt;img title="image" style="border-top: 0px; border-right: 0px; background-image: none; border-bottom: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; border-left: 0px; display: inline; padding-right: 0px" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_47.png" width="645" height="253" /&gt;&lt;/a&gt;Now I’ll run the test interactively from my current shell. As the results run and complete, status is reported to my console:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=image_48.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_48.png" width="662" height="569" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;Once the package tests have completed I see the results:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=image_49.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_49.png" width="647" height="461" /&gt;&lt;/a&gt;Whoa. What happened here? Well lets just say my daughter who makes a great &lt;a href="http://techblog.netflix.com/2012/07/chaos-monkey-released-into-wild.html"&gt;Chaos Monkey&lt;/a&gt; decided to close the lid of my laptop (the VM host) cutting off network connectivity to the VMs. Fortunately, Boxstarter is able to recover upon opening the lid:&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=image_50.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_50.png" width="649" height="394" /&gt;&lt;/a&gt;The test that was interrupted likely succeeded in completing the installation. We can inspect the error details of the failure and do not see anything representing an error from the installer. If the installer returned a non 0 exit code, we would see it in the details.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=image_51.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_51.png" width="653" height="256" /&gt;&lt;/a&gt;I’m going to go ahead and publish the passed packages now. This publishes the two packages that passed on both test VMs.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=image_52.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_52.png" width="661" height="127" /&gt;&lt;/a&gt;Also to be on the safe side, I’m going to go ahead and resubmit the failed package for testing. I just need to rerun the Test-BoxstarterPackage command. Since the other two packages were published, my remaining one package will be the only package with a version that is greater than its published version.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=image_53.png"&gt;&lt;img title="image" style="border-left-width: 0px; border-right-width: 0px; background-image: none; border-bottom-width: 0px; padding-top: 0px; padding-left: 0px; margin: 0px 10px 0px 0px; display: inline; padding-right: 0px; border-top-width: 0px" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_53.png" width="675" height="124" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;h2&gt;Other Changes in 2.4&lt;/h2&gt;  &lt;p&gt;There were several bug fixes in this release. Thanks to everyone who filed an issue! Also, these two enhancements were added:&lt;/p&gt;  &lt;ol&gt;   &lt;li&gt;All calls to the Chocolatey installer (cinst) inside of a package now includes the local repository as a package source. This is handy when working with private feeds or debugging packages an you want the package to be installed from your local repository instead of the public Chocolatey feed. &lt;/li&gt;    &lt;li&gt;When invoking a package install targeting a remote machine, the current user does not need to ba an admin user on the deployment box. They do need to be admin on the deployment target. This was done to support deploying from a Visual Studio Online build server where the ientity controllin the build is not admin on the build server. &lt;/li&gt; &lt;/ol&gt;  &lt;p&gt;Please file issues if you observe any thing that does not seem right or if you would like to suggest new features. I’d love to know what you think would be a worthy addition to Boxstarter functionality.&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2014-04-06 21:53:00</pubDate>
  <lastModified>2014-04-06 22:12:46</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>Released-Boxstarter-v24-Test-Runner-for-Chocolatey-Packages-and-many-more-Windows-GUI-configuration-functions</slug>
  <tags />
  <comments />
  <categories>
    <category>219109f8-7b0b-459b-8f25-9ce747eb0851</category>
  </categories>
  <notifications />
</post>