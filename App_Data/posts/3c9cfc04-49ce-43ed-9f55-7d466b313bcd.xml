<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<post>
  <author>mwrock</author>
  <title>nQuant Reduces The Visual Studio Gallery and MSDN Code Samples page size down by 10%</title>
  <description />
  <content>&lt;p&gt;Today the Microsoft Galleries team where I work and which supports the &lt;a href="http://visualstudiogallery.msdn.microsoft.com/"&gt;Visual Studio extensions gallery&lt;/a&gt; and the &lt;a href="http://code.msdn.microsoft.com/"&gt;MSDN Code Samples gallery&lt;/a&gt;, among many others, began quantizing its sprited images with &lt;a href="http://nquant.codeplex.com/"&gt;nQuant&lt;/a&gt; and has realized a 10% reduction in page size.&lt;/p&gt;  &lt;p&gt;&lt;a href="http://www.mattwrock.com/image.axd?picture=image_8.png"&gt;&lt;img style="background-image: none; border-right-width: 0px; margin: 0px 10px 0px 0px; padding-left: 0px; padding-right: 0px; display: inline; border-top-width: 0px; border-bottom-width: 0px; border-left-width: 0px; padding-top: 0px" title="image" border="0" alt="image" src="http://www.mattwrock.com/image.axd?picture=image_thumb_8.png" width="656" height="331" /&gt;&lt;/a&gt;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;&amp;#160;&lt;/p&gt;  &lt;p&gt;A few months ago, the &lt;a href="http://visualstudiogallery.msdn.microsoft.com/"&gt;visual studio gallery&lt;/a&gt; and the &lt;a href="http://visualstudiogallery.msdn.microsoft.com/"&gt;MSDN code samples gallery&lt;/a&gt; adopted my OSS project &lt;a href="http://requestreduce.com/"&gt;RequestReduce&lt;/a&gt;, which merges and minifies CSS as well as automatically sprites and optimizes background images. As I reported then, we experienced a 20% improvement in global page load times. At that time &lt;a href="http://requestreduce.com/"&gt;RequestReduce&lt;/a&gt; performed lossless PNG compression which can dramatically reduce the size of the sprited images which &lt;a href="http://requestreduce.com/"&gt;RequestReduce&lt;/a&gt; generates. I had also played with some “lossy” open source command line utilities that further reduced the size of PNG images – sometimes dramatically and often without perceptible quality loss. However, when I integrated these utilities into &lt;a href="http://requestreduce.com/"&gt;RequestReduce&lt;/a&gt; and applied it to some of the galleries that the Microsoft Galeries team develops (most notably the &lt;a href="http://code.msdn.microsoft.com/Silverlight"&gt;Silverlight&lt;/a&gt; and &lt;a href="http://code.msdn.microsoft.com/windowsazure"&gt;Azure&lt;/a&gt; galleries), the lossy optimization quality was simply unacceptable.&lt;/p&gt;  &lt;p&gt;I did quite a bit of research on the topic of image quantization which is the process of removing colors from an image to produce a much smaller image while utilizing sophisticated algorithms to make this color loss imperceptible (or nearly imperceptible) to the human eye. It quite possibly may even be just as effective on alien eyes but to date, we lack the empirical evidence. You can count on me to update this post as more data accumulates in that exciting area of study.&lt;/p&gt;  &lt;p&gt;While investigating this, I came across an &lt;a href="http://www.ece.mcmaster.ca/~xwu/cq.c"&gt;algorithm&lt;/a&gt; developed by Xiaolin Wu that appeared to optimize RGB images (without transparency) with a quality unmatched by any other algorithm I had experimented with. Unfortunately, the algorithm was not immediately compatible with the transparent PNGs generated by RequestReduce. After several weeks of tinkering during very odd hours, I managed to adapt the algorithm to convert 32 bit transparent PNGs to 8 bit 256 color PNGs with far superior quality than those produced by many popular C command line tools. Furthermore, this is a C# library that can be easily integrated into any other .net assembly, &lt;a href="http://nquant.codeplex.com/"&gt;nQuant&lt;/a&gt; also provides a command line wrapper which can be used for build tasks or ad hoc optimizations.&lt;/p&gt;  &lt;p&gt;If you would like to see how &lt;a href="http://nquant.codeplex.com/"&gt;nQuant&lt;/a&gt; can optimize images, head on over to &lt;a href="http://nquant.codeplex.com/"&gt;nquant.codeplex.com&lt;/a&gt; where you can download either the compiled assembly and command line utility or the full source code. The site also provides complete instructions on the propper use of the &lt;a href="http://nquant.codeplex.com/"&gt;nQuant&lt;/a&gt; API. It is dead simple. Here is an example of how to quantize a single image from within C#:&lt;/p&gt;  &lt;div id="codeSnippetWrapper"&gt;   &lt;pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &amp;#39;Courier New&amp;#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px" id="codeSnippet"&gt;var quantizer = &lt;span style="color: #0000ff"&gt;new&lt;/span&gt; WuQuantizer();&lt;br /&gt;&lt;span style="color: #0000ff"&gt;using&lt;/span&gt;(var bitmap = &lt;span style="color: #0000ff"&gt;new&lt;/span&gt; Bitmap(sourcePath))&lt;br /&gt;{&lt;br /&gt;    &lt;span style="color: #0000ff"&gt;using&lt;/span&gt;(var quantized = quantizer.QuantizeImage(bitmap, alphaTransparency, alphaFader))&lt;br /&gt;    {&lt;br /&gt;        quantized.Save(targetPath, ImageFormat.Png);&lt;br /&gt;    }&lt;br /&gt;}&lt;/pre&gt;

  &lt;br /&gt;&lt;/div&gt;

&lt;p&gt;Using the command line, you would issue a command like this:&lt;/p&gt;

&lt;div id="codeSnippetWrapper"&gt;
  &lt;pre style="border-bottom-style: none; text-align: left; padding-bottom: 0px; line-height: 12pt; background-color: #f4f4f4; margin: 0em; border-left-style: none; padding-left: 0px; width: 100%; padding-right: 0px; font-family: &amp;#39;Courier New&amp;#39;, courier, monospace; direction: ltr; border-top-style: none; color: black; border-right-style: none; font-size: 8pt; overflow: visible; padding-top: 0px" id="codeSnippet"&gt;nQuant myimage.png /o mynewimage.png&lt;/pre&gt;

  &lt;br /&gt;&lt;/div&gt;

&lt;p&gt;If you would like to not only optimize your images but also minify and merge your CSS as well as sprite your CSS background images into a single sprite, then check out &lt;a href="http://requestreduce.com/"&gt;RequestReduce&lt;/a&gt;. Unlike other similar optimization tools, you do not need to change your code or rearrange your folder structure and you do not need to supply a wealth of config options to get started. It works with multiple server environments and supports content on a CDN. &lt;a href="http://requestreduce.com/"&gt;RequestReduce&lt;/a&gt; also includes &lt;a href="http://nquant.codeplex.com/"&gt;nQuant&lt;/a&gt; which it uses to reduce the size of the images it produces.&lt;/p&gt;

&lt;p&gt;For more details on the algorithm included in the &lt;a href="http://nquant.codeplex.com/"&gt;nQuant&lt;/a&gt; library and my efforts to adapt it to ARGB transparent images, read my &lt;a href="http://www.mattwrock.com/post/2011/09/05/Convert-32-bit-PNGs-to-high-quality-8-bit-PNGs-with-C.aspx"&gt;post&lt;/a&gt; on this subject.&lt;/p&gt;</content>
  <ispublished>True</ispublished>
  <isdeleted>False</isdeleted>
  <iscommentsenabled>True</iscommentsenabled>
  <pubDate>2011-09-30 00:21:17</pubDate>
  <lastModified>2011-09-30 00:21:17</lastModified>
  <raters>0</raters>
  <rating>0</rating>
  <slug>nQuant-Reduces-The-Visual-Studio-Gallery-and-MSDN-Code-Samples-page-size-down-by-10</slug>
  <tags />
  <comments />
  <categories />
  <notifications>
    <email>sabaattitute@gmail.com</email>
  </notifications>
</post>